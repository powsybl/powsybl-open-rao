name: Snapshot CI

on:
  workflow_dispatch:
  pull_request:
    branches:
      - 'testci/core-*'
  push:
    branches:
      - 'testci/core-*'

jobs:
  build:
    name: Build and test on ${{ matrix.os }} with ${{ matrix.jvm }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        jvm: [java, graalvm]

    defaults:
      run:
        shell: bash

    steps:

      - name: Extract core version from branch
        if: startsWith(github.ref_name, 'testci/')
        run: |
          BRANCH_NAME="${GITHUB_REF_NAME##*/}"
          VERSION="${BRANCH_NAME#testci/core-}"
          echo "CORE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up script path
        run: |
          SCRIPTS_PATH="${GITHUB_WORKSPACE}/.github/workflows/scripts"
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            SCRIPTS_PATH=$(echo "$SCRIPTS_PATH" | sed 's/\\/\//g')
          fi
          echo "SCRIPTS_PATH=$SCRIPTS_PATH" >> $GITHUB_ENV  

      - name: Checkout script
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github/workflows/scripts
          sparse-checkout-cone-mode: false

      - name: Confirm script is present
        run: |
          ls -l ${GITHUB_WORKSPACE}/.github/workflows
          ls -l ${GITHUB_WORKSPACE}/.github/workflows/scripts
          test -f "${{ env.SCRIPTS_PATH }}/check_snapshot_branch.sh" && echo "Script OK" || echo "Script MISSING"

      - name: Checkout core sources
        uses: actions/checkout@v4
        with:
          repository: powsybl/powsybl-core
          ref: main
          path: powsybl-core

      - name: Build powsybl-core
        run: mvn -batch-mode --no-transfer-progress clean install -DskipTests
        working-directory: ./powsybl-core

      - name: Checking for powsybl-open-loadflow snapshot branch
        run: ${{ env.SCRIPTS_PATH }}/check_snapshot_branch.sh "https://github.com/powsybl/powsybl-open-loadflow.git" ${{ env.CORE_VERSION }}

      - name: Checkout powsybl-open-loadflow sources
        uses: actions/checkout@v4
        with:
          repository: powsybl/powsybl-open-loadflow
          ref: ${{ env.SNAPSHOT_BRANCH }}
          path: powsybl-open-loadflow

      - name: Change core version in pom.xml
        run: mvn versions:set-property -Dproperty=powsybl-core.version -DnewVersion=${{ env.CORE_VERSION }} -DgenerateBackupPoms=false
        working-directory: ./powsybl-open-loadflow

      - name: Build powsybl-open-loadflow
        run: mvn -batch-mode --no-transfer-progress clean install
        working-directory: ./powsybl-open-loadflow

      - name: Get OLF_VERSION
        run: echo "OLF_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        working-directory: ./powsybl-open-loadflow

      - name: Checking for powsybl-entsoe snapshot branch
        run: ${{ env.SCRIPTS_PATH }}/check_snapshot_branch.sh "https://github.com/powsybl/powsybl-entsoe.git" ${{ env.CORE_VERSION }}

      - name: Checkout powsybl-entsoe sources
        uses: actions/checkout@v4
        with:
          repository: powsybl/powsybl-entsoe
          ref: ${{ env.SNAPSHOT_BRANCH }}
          path: powsybl-entsoe

      - name: Change core/loadflow version in pom.xml
        run: |
          mvn versions:set-property -Dproperty=powsyblcore.version -DnewVersion=${{ env.CORE_VERSION }} -DgenerateBackupPoms=false
          mvn versions:set-property -Dproperty=powsyblopenloadflow.version -DnewVersion=${{ env.OLF_VERSION }} -DgenerateBackupPoms=false
        working-directory: ./powsybl-entsoe

      - name: Build powsybl-entsoe
        run: mvn -batch-mode --no-transfer-progress clean install
        working-directory: ./powsybl-entsoe

      - name: Get ENTSOE_VERSION
        run: echo "ENTSOE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
        working-directory: ./powsybl-entsoe

      - name: Checking for powsybl-open-rao snapshot branch
        run: ${{ env.SCRIPTS_PATH }}/check_snapshot_branch.sh "https://github.com/powsybl/powsybl-open-rao.git" ${{ env.CORE_VERSION }}

      - name: Checkout powsybl-open-rao sources
        uses: actions/checkout@v4
        with:
          repository: powsybl/powsybl-open-rao
          ref: ${{ env.SNAPSHOT_BRANCH }}
          path: powsybl-openrao

      - name: Change core/entsoe/loadflow version in pom.xml
        run: |
          mvn versions:set-property -Dproperty=powsybl.core.version -DnewVersion=${{ env.CORE_VERSION }} -DgenerateBackupPoms=false
          mvn versions:set-property -Dproperty=powsybl.entsoe.version -DnewVersion=${{ env.ENTSOE_VERSION }} -DgenerateBackupPoms=false
          mvn versions:set-property -Dproperty=powsybl.openloadflow.version -DnewVersion=${{ env.OLF_VERSION }} -DgenerateBackupPoms=false
        working-directory: ./powsybl-openrao

      - name: Build powsybl-open-rao
        run: mvn -batch-mode --no-transfer-progress clean install
        working-directory: ./powsybl-openrao
